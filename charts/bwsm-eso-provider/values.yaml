# Default values for bwsm-eso-provider.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

bwsm_eso_provider:
  # -- if set to True, we'll create a cluster-wide Cluster Secret Store
  # see: https://external-secrets.io/latest/introduction/overview/#clustersecretstore
  create_cluster_secret_store: true
  auth:
    # -- bitwarden secrets manager access token to use to authenticate BWS CLI and fetch secrets in the pod; ignored if existingSecret is set
    accessToken: ""
    # -- use an existing secret for bitwarden secrets manager credentials; ignores above credentials if this is set
    existingSecret: ""
    secretKeys:
      # -- secret key for bitwarden secrets manager access token to use to authenticate BWS CLI and fetch secrets in the pod; do not change unless customizing the Express.JS wrapper code
      accessToken: "BWS_ACCESS_TOKEN"
  sample_secret: 
    # -- create a sample external secret for quick verification; works only when create_cluster_secret_store is True
    create: false
    # -- name of the sample ExternalSecret and corresponding k8s secret
    secretName: ""
    # -- name of the sample ExternalSecret's (and the corresponding k8s secret's) key
    secretKey: ""
    remoteRef:
      # -- Bitwarden Secrets Manager Secret ID (must be a valid UUID)
      key: ""
      # -- Bitwarden Secrets Manager Secret property to extract the value of
      property: "key"
  network_policy:
    # -- enable a network policy between BWSM pod(s) and ESO namespace; highly recommended as the Express.js App provides no authentication
    enabled: true
    # -- specify the labels to match against for the network policy
    labels:
      app.kubernetes.io/name: external-secrets

# -- number of replicas to deploy
replicaCount: 1

image:
  # -- Overrides the image repository; useful if building one's own image 
  repository: bojanraic/bwsm-eso
  # -- Overrides the image pullPolicy. Hint: set to Always if using latest tag
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion; do not change unless building your custom image or really needed
  tag: ""

imagePullSecrets: []
# -- this overrides the name of the chart
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- additional annotations to apply to the bitwarden ESO provider pod
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  # -- port on the container to target for the k8s service; 
  targetPort: 8080
  # -- port to broadcast for k8s service internally on the cluster
  port: 8080

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  # -- liveness probe initial delay
  initialDelaySeconds: 15
  # -- liveness probe failure threshold
  failureThreshold: 3
  # -- liveness probe timeout 
  timeoutSeconds: 1
  # -- liveness probe period
  periodSeconds: 10

readinessProbe:
  # -- readiness probe initial delay
  initialDelaySeconds: 15
  # -- readiness probe failure threshold
  failureThreshold: 3
  # -- readiness probe timeout 
  timeoutSeconds: 1
  # -- readiness probe period 
  periodSeconds: 10

startupProbe:
  # -- readiness probe initial delay
  initialDelaySeconds: 15
  # -- readiness probe failure threshold
  failureThreshold: 3
  # -- readiness probe timeout 
  timeoutSeconds: 1
  # -- readiness Probe period 
  periodSeconds: 10

autoscaling:
  # -- enable pod autoscaling
  enabled: false
  # -- minimum number of pods to keep
  minReplicas: 1
  # -- max number of pods to spin up
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}